// Generated by CoffeeScript 1.10.0
var fs, fsExtra, glob, jsdom, path, prompt, setPath, startConvert;

jsdom = require('jsdom');

fs = require('fs');

fsExtra = require('fs-extra');

prompt = require('prompt');

path = require('path');

glob = require('glob');

setPath = function() {
  prompt.start();
  prompt.get(['PATHURL', 'AdServer'], function(err, result) {
    startConvert(result.PATHURL, result.AdServer);
  });
};

startConvert = function(pathURL, adServer) {
  var destAdserver, srcAdserver;
  switch (adServer) {
    case 'admotion':
      srcAdserver = 'templates/Admotion/Banner';
      destAdserver = pathURL + "/" + adServer;
      break;
    case 'atlas':
      srcAdserver = 'templates/atlas';
      destAdserver = pathURL + "/" + adServer;
  }
  return fsExtra.copy(srcAdserver, destAdserver, function(err) {
    var extension, htmlSource, htmlSourceAdmotion, i, len, ref, sourceTemplate, sourceTemplateAdmotion;
    if (err) {
      return console.error(err);
    }
    console.log('success! paste');
    ref = ['*.jpg', '*.png', '*.gif'];
    for (i = 0, len = ref.length; i < len; i++) {
      extension = ref[i];
      glob(pathURL + "/" + extension, null, function(err, files) {
        var file, j, len1, results;
        if (err) {
          return console.error(err);
        }
        results = [];
        for (j = 0, len1 = files.length; j < len1; j++) {
          file = files[j];
          console.log(file);
          results.push(fsExtra.copy(file, destAdserver + "/custom/images/" + (path.basename(file)), function(err) {
            if (err) {
              return console.error(err);
            }
          }));
        }
        return results;
      });
    }
    htmlSource = fs.readFileSync(pathURL + "/index.html", 'utf8');
    htmlSourceAdmotion = fs.readFileSync(destAdserver + "/index.html", 'utf8');
    sourceTemplate = jsdom.jsdom(htmlSource, {
      features: {
        FetchExternalResources: ['script'],
        ProcessExternalResources: ['script'],
        MutationEvents: '2.0'
      },
      parsingMode: 'auto'
    });
    sourceTemplateAdmotion = jsdom.jsdom(htmlSourceAdmotion, {
      features: {
        FetchExternalResources: ['script'],
        ProcessExternalResources: ['script'],
        MutationEvents: '2.0'
      },
      parsingMode: 'auto'
    });
    jsdom.jQueryify(sourceTemplate.defaultView, 'http://code.jquery.com/jquery.js', function() {
      var $, contentBanner, creativityHeight, creativityWidth, cssBanner, fnc;
      $ = sourceTemplate.defaultView.$;
      contentBanner = $('#page1').parent().html();
      creativityWidth = $('#page1').attr('data-gwd-width');
      creativityHeight = $('#page1').attr('data-gwd-height');
      console.log(creativityWidth);
      cssBanner = $('style');
      fnc = (function(css, banner) {
        return function() {
          var bannerDimensions, bodyAdmotion, contentBannerAdmotion, headerAdmotion, removeScript, replaceImg;
          $ = sourceTemplateAdmotion.defaultView.$;
          contentBannerAdmotion = $('#Creativity');
          headerAdmotion = $('head');
          bodyAdmotion = $('body');
          bannerDimensions = $('#bannerDimensions');
          bannerDimensions.html('var adConfig = {}; adConfig.creativityWidth = "' + ("" + creativityWidth) + '"; adConfig.creativityHeight = "' + ("" + creativityHeight) + '";');
          bannerDimensions.removeAttr('id');
          bodyAdmotion.append('<script> window.onload = function(){ var bannerOutput = document.getElementById("page1"); bannerOutput.firstElementChild.className += " gwd-play-animation"; } </script>');
          headerAdmotion.append(cssBanner);
          contentBannerAdmotion.prepend(contentBanner);
          replaceImg = $('img[is="gwd-image"]').each(function(index, data) {
            var source, tag;
            tag = $(data);
            source = tag.attr('source');
            tag.removeAttr('is');
            tag.removeAttr('id');
            tag.removeAttr('source');
            tag.attr('src', 'custom/images/' + source);
            return console.log(tag[0].outerHTML);
          });
          removeScript = $('.jsdom');
          removeScript.remove();
          fs.writeFile(destAdserver + "/index.html", '<html>' + contentBannerAdmotion.parents('html').html() + '</html>', function(err) {
            if (err) {
              throw err;
            }
            console.log('Template Convertido com sucesso.');
          });
        };
      })(cssBanner, contentBanner);
      return jsdom.jQueryify(sourceTemplateAdmotion.defaultView, 'http://code.jquery.com/jquery.js', fnc);
    });
  });
};

setPath();

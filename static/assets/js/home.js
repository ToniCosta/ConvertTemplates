// Generated by CoffeeScript 1.10.0
var btnFechar, btnFecharHTML, form, handleBtnFechar, handleDragOver, handleFileSelect, handleInputFile, handleTarget, inputFile, modalCompressImg, modalTemplate, pathURL, postFile, target;

target = document.querySelector('.target');

inputFile = document.getElementById('file');

pathURL = document.querySelector('.pathURL');

form = document.getElementById('convert');

modalCompressImg = document.getElementById('modalCompressImg');

modalTemplate = document.getElementById('modalTemplate');

btnFechar = document.getElementById('fechar');

btnFecharHTML = document.getElementById('fecharHTML');

form = document.getElementById('form');

handleBtnFechar = function() {
  modalCompressImg.style.display = 'none';
  modalTemplate.style.display = 'none';
};

handleFileSelect = function(evt) {
  var f, files, i, output;
  evt.stopPropagation();
  evt.preventDefault();
  files = evt.dataTransfer.files;
  output = [];
  i = 0;
  f = void 0;
  while (f = files[i]) {
    output.push('<strong>', escape(f.type), '</strong><br>');
    i++;
    if (escape(f.type) === 'text/html') {
      console.log('html');
      $('.progress').show();
      modalTemplate.style.display = 'block';
    } else if (escape(f.type) === 'image/jpeg' || escape(f.type) === 'image/png') {
      console.log('images');
      $('.progress').show();
      modalCompressImg.style.display = 'block';
    }
    pathURL.innerHTML = output.join('');
  }
};

handleDragOver = function(evt) {
  evt.stopPropagation();
  evt.preventDefault();
  if (evt.target.className === 'hover') {
    return;
  } else {
    evt.target.className += ' hover';
    evt.dataTransfer.dropEffect = 'copy';
  }
};

handleTarget = function() {
  inputFile.click();
};

handleInputFile = function(evt) {
  var f, files, i, output, typeFile;
  files = inputFile.files;
  output = [];
  i = 0;
  f = void 0;
  while (f = files[i]) {
    output.push('<strong>', escape(f.type), '</strong><br>');
    i++;
    if (escape(f.type) === 'text/html') {
      console.log('html');
      typeFile = f.type;
      $('.progress').show();
      modalTemplate.style.display = 'block';
      postFile(typeFile);
    } else if (escape(f.type) === 'image/jpeg' || escape(f.type) === 'image/png') {
      console.log('images');
      typeFile = f.type;
      $('.progress').show();
      modalCompressImg.style.display = 'block';
      postFile(typeFile);
    }
    pathURL.innerHTML = output.join('');
  }
};

target.addEventListener('click', handleTarget, false);

inputFile.addEventListener('change', handleInputFile, false);

target.addEventListener('dragover', handleDragOver, false);

target.addEventListener('drop', handleFileSelect, false);

btnFechar.addEventListener('click', handleBtnFechar, false);

btnFecharHTML.addEventListener('click', handleBtnFechar, false);

$('.progress-bar').text('0%');

$('.progress-bar').width('0%');

postFile = function(typeFile) {
  $("input[name='gender']").on('click', function() {
    var file, files, formData, i, path;
    path = $("input[name='gender']:checked").val();
    console.log(path);
    files = $('#file').get(0).files;
    console.log(files);
    if (files.length > 0) {
      formData = new FormData;
      i = 0;
      while (i < files.length) {
        file = files[i];
        formData.append('files', file, file.name);
        i++;
      }
      formData.append('fields', path);
      formData.append('typeFiles', typeFile);
      $.ajax({
        url: '/compress',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(data) {
          console.log('upload sucess!\n' + data);
        },
        xhr: function() {
          var xhr;
          xhr = new XMLHttpRequest;
          xhr.upload.addEventListener('progress', (function(evt) {
            var percentComplete;
            if (evt.lengthComputable) {
              percentComplete = evt.loaded / evt.total;
              percentComplete = parseInt(percentComplete * 100);
              $('.progress-bar').text(percentComplete + '%');
              $('.progress-bar').width(percentComplete + '%');
            }
          }), false);
          return xhr;
        }
      });
    }
  });
  return $("#generate").on('click', function() {
    var fields, file, files, formData, i, j, selected;
    fields = $("input[name='vehicle']:checked");
    files = $('#file').get(0).files;
    if (files.length > 0) {
      formData = new FormData;
      i = 0;
      while (i < files.length) {
        file = files[i];
        formData.append('files', file, file.name);
        i++;
      }
      j = 0;
      while (j < fields.length) {
        selected = fields[j].value;
        console.log(selected);
        formData.append("fields", selected);
        j++;
      }
      console.log(formData);
      formData.append('typeFiles', typeFile);
      $.ajax({
        url: '/api',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(data) {
          console.log('upload sucess!\n' + data);
        },
        xhr: function() {
          var xhr;
          xhr = new XMLHttpRequest;
          xhr.upload.addEventListener('progress', (function(evt) {
            var percentComplete;
            if (evt.lengthComputable) {
              percentComplete = evt.loaded / evt.total;
              percentComplete = parseInt(percentComplete * 100);
              $('.progress-bar').text(percentComplete + '%');
              $('.progress-bar').width(percentComplete + '%');
            }
          }), false);
          return xhr;
        }
      });
    }
  });
};

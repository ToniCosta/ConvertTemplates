// Generated by CoffeeScript 1.10.0
var XMLHttpFactories, btnFechar, btnFecharHTML, cancelSubmit, createXMLHTTPObject, form, handleBtnFechar, handleDragOver, handleFileSelect, handleInputFile, handleRequest, handleTarget, inputFile, modalCompressImg, modalTemplate, pathURL, sendRequest, target;

target = document.querySelector('.target');

inputFile = document.getElementById('file');

pathURL = document.querySelector('.pathURL');

form = document.getElementById('convert');

modalCompressImg = document.getElementById('modalCompressImg');

modalTemplate = document.getElementById('modalTemplate');

btnFechar = document.getElementById('fechar');

btnFecharHTML = document.getElementById('fecharHTML');

form = document.getElementById('form');

cancelSubmit = function() {
  console.log('cancel form');
  return false;
};

handleBtnFechar = function() {
  modalCompressImg.style.display = 'none';
  modalTemplate.style.display = 'none';
};

handleFileSelect = function(evt) {
  var f, files, i, output;
  evt.stopPropagation();
  evt.preventDefault();
  files = evt.dataTransfer.files;
  output = [];
  i = 0;
  f = void 0;
  while (f = files[i]) {
    output.push('<strong>', escape(f.type), '</strong><br>');
    i++;
    if (escape(f.type) === 'text/html') {
      console.log('html');
      modalTemplate.style.display = 'block';
    } else if (escape(f.type) === 'image/jpeg' || escape(f.type) === 'image/png') {
      console.log('images');
      modalCompressImg.style.display = 'block';
    }
    pathURL.innerHTML = output.join('');
  }
};

handleDragOver = function(evt) {
  evt.stopPropagation();
  evt.preventDefault();
  if (evt.target.className === 'hover') {
    return;
  } else {
    evt.target.className += ' hover';
    evt.dataTransfer.dropEffect = 'copy';
  }
};

handleTarget = function() {
  inputFile.click();
};

handleInputFile = function(evt) {
  var f, files, i, output;
  files = inputFile.files;
  output = [];
  i = 0;
  f = void 0;
  while (f = files[i]) {
    output.push('<strong>', escape(f.type), '</strong><br>');
    i++;
    if (escape(f.type) === 'text/html') {
      console.log('html');
      modalTemplate.style.display = 'block';
    } else if (escape(f.type) === 'image/jpeg' || escape(f.type) === 'image/png') {
      console.log('images');
      modalCompressImg.style.display = 'block';
    }
    pathURL.innerHTML = output.join('');
  }
};

target.addEventListener('click', handleTarget, false);

inputFile.addEventListener('change', handleInputFile, false);

target.addEventListener('dragover', handleDragOver, false);

target.addEventListener('drop', handleFileSelect, false);

btnFechar.addEventListener('click', handleBtnFechar, false);

btnFecharHTML.addEventListener('click', handleBtnFechar, false);

form.addEventListener('submit', cancelSubmit);

XMLHttpFactories = [
  function() {
    return new XMLHttpRequest;
  }, function() {
    return new ActiveXObject('Msxml2.XMLHTTP');
  }, function() {
    return new ActiveXObject('Msxml3.XMLHTTP');
  }, function() {
    return new ActiveXObject('Microsoft.XMLHTTP');
  }
];

sendRequest = function(url, callback, postData) {
  var method, req;
  req = createXMLHTTPObject();
  if (!req) {
    return;
  }
  method = postData ? 'POST' : 'GET';
  req.open(method, url, true);
  if (postData) {
    req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
  }
  req.onreadystatechange = function() {};
  if (req.readyState !== 4) {
    return;
  }
  if (req.status !== 200 && req.status !== 304) {
    return;
  }
  callback(req);
  return;
  if (req.readyState === 4) {
    return;
  }
  req.send(postData);
};

createXMLHTTPObject = function() {
  var e, error, i, xmlhttp;
  xmlhttp = false;
  i = 0;
  while (i < XMLHttpFactories.length) {
    try {
      xmlhttp = XMLHttpFactories[i]();
    } catch (error) {
      e = error;
      i++;
      i++;
      continue;
    }
    break;
    i++;
  }
  return xmlhttp;
};

handleRequest = function(req) {
  var writeroot;
  writeroot = document.getElementById('progress-bar');
  writeroot.textContent = req.responseText;
};

sendRequest('/api', handleRequest);

window.onload = function() {
  cancelSubmit();
  document.getElementById('progress-bar').textContent = '0%';
  document.getElementById('progress-bar').style.width = '0%';
};
